<script type="text/javascript">
  
  function enter(e) {
    return true;
  }

  function over(e) {
    var pbi = e.dataTransfer.getData('pbi');
    var id = e.target.getAttribute('id');

    // return false para permitir soltar
    return false;
  }

  function drop(e) {
    var container_id = e.target.id;
    var pbi_id = e.dataTransfer.getData('pbi');
    var pbi_id_value = pbi_id.substring(4);
    var action;
    
    if (container_id == 'product-backlog') {
      action = 'U';
    } else {
      action = 'A';
    }
    
    // Make AJAX call
    $.ajax({
      type: "POST",
      url: "<%=assign_pbi_to_sprint_path%>",
      data: "pbi_id=" + pbi_id_value +"&do="+action,
      success: function(msg){
        
      }
    });

    e.target.appendChild(document.getElementById(pbi_id));
    e.stopPropagation();
    return false;
  }

  function start(e) {
    e.dataTransfer.effectAllowed = 'move';
    e.dataTransfer.setData('pbi', e.target.getAttribute('id'));
    e.dataTransfer.setDragImage(e.target, 0, 0);
    return true;
  }

  function end(e) {
    e.dataTransfer.clearData('pbi');
    return true;
  }

  function PBI() {
    var pbi = document.createElement('div');
    var product_backlog = document.getElementById('product-backlog');
    pbi.className = 'pbi';
    product_backlog.appendChild(pbi);
  }

  PBI.prototype = {
    get id() {
      if (!("_id" in this))
        this._id = 0;
      return this._id;
    },

    set id(x) {
      this._id = x
    },

    get description() {
      return this.innerHTML;
    },

    set description(x) {
      this.innerHTML = x;
    }

  }

  function addPBI() {
    var pbi = new PBI();
  }

  // Updates the PBI
  function update_pbi(e) {

    var pbi_description = e.parentNode;
    var pbi = pbi_description.parentNode;
    var pbi_id = pbi.id.substring(4);
    var text = e.innerHTML;

    // Make it draggable
    e.setAttribute('contenteditable','false');
    pbi.setAttribute('draggable','true');

    // Make an AJAX call
    $.ajax({
      type: "POST",
      url: "<%=update_pbi_path%>",
      data: "pbi_id=" + pbi_id + "&description=" + text,
      success: function(msg){
        
      }
    });

  }

  // Make the div editable
  function edit_pbi(e) {

    // Get the editable element
    var div_edit = e.parentNode;
    var pbi_header = div_edit.parentNode;
    var pbi = pbi_header.parentNode;
    var divs = pbi.getElementsByTagName('div');
    var pbi_description = divs[3];
    var divs_pbi_description = pbi_description.getElementsByTagName('div');
    var pbi_editable = divs_pbi_description[0];
    
    pbi_editable.setAttribute('contenteditable','true');
    pbi.setAttribute('draggable','false');
    pbi_editable.focus();
  }

  // Destroys the PBI
  function delete_pbi(e) {

    // Get the id of the PBI
    var div_delete = e.parentNode;
    var pbi_header = div_delete.parentNode;
    var pbi = pbi_header.parentNode;
    var pbi_id = pbi.id.substring(4);
    
    // Make an AJAX call
    $.ajax({
      type: "POST",
      url: "<%=delete_pbi_path%>",
      data: "pbi_id=" + pbi_id,
      success: function(msg){
        
      }
    });
  }

  // Capturing tab event
  $(".pbi-editable").live('keydown', function(e) {
      var keyCode = e.keyCode || e.which;

      // Tab event 
      if (keyCode == 9) {
        update_pbi(this);
      }
  });

  // Capturing tab event
  $(".pbi-header").live('mouseover', function(e) {

    var divs = this.getElementsByTagName('div');
    
    for (var i=0;i<divs.length;i++) {
      
        divs[i].style.display = 'block';
      
    }
    
  });

  $(".pbi-header").live('mouseout', function(e) {

    var divs = this.getElementsByTagName('div');
    for (var i=0;i<divs.length;i++) {
      divs[i].style.display = 'none';
    }

  });

</script>

<%= link_to 'Add', create_pbi_path, remote: true %>
<div id="product-backlog" 
  ondragenter="return enter(event)"
  ondragover="return over(event)"
  ondrop="return drop(event)">
  <div class="header">
    <label>Product Backlog</label>
  </div>
  <%= render 'sprint/partials/product_backlog' %>
</div>

<div id="sprint"
  ondragenter="return enter(event)"
  ondragover="return over(event)"
  ondrop="return drop(event)">
  <div class="header">
    <label>Sprint 1</label>
  </div>
</div>

